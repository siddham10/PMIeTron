trigger:
  branches:
    include:
      - main  # Replace with your target branch name

stages:
  - stage: Publish_Zip_File
    displayName: 'Publish Zip File'
    jobs:
      - job: Publish_Zip_File_Job
        displayName: 'Publish Zip File'
        steps:
          - checkout: self

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '10-json/110-uiconfig/1106-entitytype/rock-entity-header_product_thing_uiConfig.json'  # Replace with the path to your folder in the repository
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/my_artifact.zip'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifactName: 'my-artifact'  # Replace with your desired artifact name
              publishLocation: 'pipeline'
            displayName: 'Publish Zip File'
          
  - stage: Generate_Auth_Token
    displayName: 'Generate Auth Token'
    jobs:
      - job: Generate_Auth_Token_Job
        displayName: 'Generate Auth Token'
        steps:
          - checkout: self

          - script: |
              # Generate the authToken
              currentTime=$(date -u +"%Y-%m-%dT%H:%M:%S")
              request="POST https://etronds.riversand.com/api/binarystreamobjectservice/prepareUpload"
              clientId="rdpclient"  # Replace with your clientId
              userId="etronds.systemadmin@riversand.com"  # Replace with your userId
              clientAuthKey="J7UaRWQgxorI8mdfuu8y0mOLqzlIJo2hM3O4VfhX1PIeoa7CYVX_l0-BnHRtuSWB"  # Replace with your clientAuthKey
              signature=$(echo -n "$request&timeStamp=$currentTime" | openssl dgst -binary -sha256 -hmac "$clientAuthKey" | openssl base64 -e)
              authToken="$clientId,$userId,$signature"
    
              echo "##vso[task.setvariable variable=authToken]$authToken"
            displayName: 'Generate Auth Token'

  - stage: Get_Upload_URL
    displayName: 'Get Upload URL'
    jobs:
      - job: Get_Upload_URL_Job
        displayName: 'Get Upload URL'
        steps:
          - checkout: self

          - script: |
              jsonobject='{"adminObject":{"id":"someguid","type":"adminObject","properties":{"flushConfig":false,"storageType":"stream","objectKey":"my-artifact","tenantId":"etronds","retryCount":1,"sleepTime":1000}}}'
              authToken=$(echo $(authToken))

              prepareUploadResponse=$(curl -X POST \
                -H "Content-Type: application/json" \
                -H "Authorization: $authToken" \
                -d "$jsonobject" \
                'https://etronds.riversand.com/api/binarystreamobjectservice/prepareUpload')

              uploadURL=$(echo "$prepareUploadResponse" | jq -r '.response.binaryStreamObjects[0].properties.uploadURL')

              echo "##vso[task.setvariable variable=uploadURL]$uploadURL"
            displayName: 'Get Upload URL'

  - stage: Deploy_File
    displayName: 'Deploy File'
    jobs:
      - job: Deploy_File_Job
        displayName: 'Deploy File'
        steps:
          - checkout: self
          
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'my-artifact'  # Replace with the same artifact name used in the Publish_Zip_File stage
              downloadPath: '$(Pipeline.Workspace)'
            displayName: 'Download Zip File' 

          - script: |
              jsonobject='{"adminObject":{"id":"someguid","type":"adminObject","properties":{"flushConfig":false,"storageType":"stream","objectKey":"my-artifact","tenantId":"etronds","retryCount":1,"sleepTime":1000}}}'
              authToken=$(echo $(authToken))
              uploadURL=$(echo $(uploadURL))

              curl -v -X PUT "$uploadURL" \
                -H 'Content-Type: application/json' \
                -H 'x-rdp-version: 8.1' \
                -H 'x-rdp-tenantId: etronds' \
                -H 'x-rdp-clientId: rdpclient' \
                -H 'x-rdp-userId: etronds.systemadmin@riversand.com' \
                -H 'x-rdp-userRoles: systemadmin' \
                -H 'auth-client-id: j29DTHa7m7VHucWbHg7VvYA75pUjBopS' \
                -H 'auth-client-secret: J7UaRWQgxorI8mdfuu8y0mOLqzlIJo2hM3O4VfhX1PIeoa7CYVX_l0-BnHRtuSWB' \
                --data-binary "@$(Pipeline.Workspace)/files.zip"

              echo "Folder deployed successfully."
            displayName: 'Deploy Folder'

  - stage: Get_Details_From_Tenant
    displayName: 'Get Details From Tenant'
    jobs:
      - job: Get_Details_From_Tenant_Job
        displayName: 'Get Details From Tenant'
        steps:
          - script: |

             jsonobject='{"adminObject":{"id":"someguid","type":"adminObject","properties":{"flushConfig":false,"storageType":"stream","objectKey":"my-artifact","tenantId":"etronds","retryCount":1,"sleepTime":1000}}}'
             deploymentResponse=$(curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'x-rdp-version: 8.1' \
              -H 'x-rdp-tenantId: etronds' \
              -H 'x-rdp-clientId: rdpclient' \
              -H 'x-rdp-userId: etronds.systemadmin@riversand.com' \
              -H 'x-rdp-userRoles: systemadmin' \
              -H 'auth-client-id: j29DTHa7m7VHucWbHg7VvYA75pUjBopS' \
              -H 'auth-client-secret: J7UaRWQgxorI8mdfuu8y0mOLqzlIJo2hM3O4VfhX1PIeoa7CYVX_l0-BnHRtuSWB' \
              -d "$jsonobject" \
              'https://etronds.riversand.com/api/adminservice/deploytenantseed')

              echo "$deploymentResponse"
            displayName: 'Deployment'
