trigger:
  branches:
    include:
      - main

stages:
- stage: Publish_Zip_File
  displayName: 'Publish Zip File'
  jobs:
  - job: Publish_Zip_File_Job
    displayName: 'Publish Zip File'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '10-json/110-uiconfig/1106-entitytype/rock-entity-header_product_thing_uiConfig.json'  # Replace with the path to your folder in the repository
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/files.zip'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifactName: 'new_artifact'  # Replace with your desired artifact name
        publishLocation: 'pipeline'

- stage: Initialization
  displayName: 'Initialization...'
  dependsOn: Publish_Zip_File
  jobs:
  - job: InitializationJob
    displayName: 'Initialization Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        jsonIncludefilepath="$(Build.SourcesDirectory)/deployment-artifacts/includedfile.json"
        zipfilepath="$(Build.SourcesDirectory)/$(Build.SourceBranch | tr / .).zip"
        zip_workflowfilepath="$(Build.SourcesDirectory)/postdeployment.zip"

        echo "jsonIncludefilepath: $jsonIncludefilepath"
        echo "zipfilepath: $zipfilepath"
        echo "zip_workflowfilepath: $zip_workflowfilepath"
      displayName: 'Initialize variables'

- stage: PreparePackage
  displayName: 'prepare-package'
  dependsOn: Initialization
  jobs:
  - job: PreparePackageJob
    displayName: 'Prepare Package Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        includedFilenamesString='[{"filename":"rock-entity-header_product_thing_uiConfig.json"}]'
        
        echo "includedFilenamesString: $includedFilenamesString"

        if [[ $includedFilenamesString == *","* ]]; then
          IFS=',' read -ra includedFilenames <<< "$includedFilenamesString"
          for includedFilename in "${includedFilenames[@]}"; do
            includedFilename=$(echo $includedFilename | tr -d '[]')
            includedfile+="$(Build.SourcesDirectory)/$includedFilename,"
          done
          includedfile=${includedfile::-1}
          echo "Final included files: $includedfile"
        else
          includedfile="$(Build.SourcesDirectory)/$includedFilenamesString"
          echo "No comma present: $includedfile"
        fi

        echo "Final included files: $includedfile"
        echo "Filenames processed successfully... Moving to zipping.."

        rm -f $zipfilepath
        zip -r $zipfilepath $includedfile
        if [ ! -f $zipfilepath ]; then
          echo "Failed to create the zip file."
          exit 1
        else
          echo "Files zipped successfully..."
        fi
      displayName: 'Prepare package'

# The rest of the stages and jobs remain the same...

- stage: CreatingFolder
  displayName: 'creating folder'
  dependsOn: PreparePackage
  jobs:
  - job: CreatingFolderJob
    displayName: 'Creating Folder Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        jsonobject=$(echo "{\"binaryStreamObject\":{\"id\":\"guid\",\"type\":\"seedDataStream\",\"properties\":{\"objectKey\":\"$(Build.SourceBranch | tr / .)\",\"originalFileName\":\"$(Build.SourceBranch | tr / .)\"}}}")
        
        curl -X POST \
          -H "Content-Type: application/json" \
          -H "x-rdp-version: 8.1" \
          -H "x-rdp-tenantId: etronds" \
          -H "x-rdp-clientId: rdpclient" \
          -H "x-rdp-userId: etronds.systemadmin@riversand.com" \
          -H "x-rdp-userRoles: systemadmin" \
          -H "auth-client-id: j29DTHa7m7VHucWbHg7VvYA75pUjBopS" \
          -H "auth-client-secret: J7UaRWQgxorI8mdfuu8y0mOLqzlIJo2hM3O4VfhX1PIeoa7CYVX_l0-BnHRtuSWB" \
          -d "$jsonobject" \
          https://etronds.riversand.com/api/binarystreamobjectservice/prepareUpload
      displayName: 'Creating folder'

# The remaining stages and jobs continue...

- stage: DeployingFolder
  displayName: 'Deploying folder'
  dependsOn: CreatingFolder
  jobs:
  - job: DeployingFolderJob
    displayName: 'Deploying Folder Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "==== Deploying folder ===="
        
        encodedFileuploadUrl=$(echo $fileuploadUrl | sed 's/%/%%/g')
        
        curl -v -X PUT $encodedFileuploadUrl \
          -H "x-ms-meta-x_rdp_userroles: systemadmin" \
          -H "x-ms-meta-x_rdp_tenantid: etronds" \
          -H "x-ms-meta-originalfilename: $(Build.SourceBranch | tr / .)" \
          -H "x-ms-blob-content-disposition: attachment; filename=$(Build.SourceBranch | tr / .)" \
          -H "x-ms-meta-type: disposition" \
          -H "x-ms-meta-x_rdp_clientid: rdpclient" \
          -H "x-ms-meta-x_rdp_userid: etronds.systemadmin@riversand.com" \
          -H "x-ms-meta-binarystreamobjectid: guid" \
          -H "x-ms-blob-type: BlockBlob" \
          -H "Content-Type: application/zip" \
          --data-binary "@$zipfilepath"
        
      displayName: 'Deploy folder'

- stage: DeploymentIntoTenant
  displayName: 'Deployment into tenant'
  dependsOn: DeployingFolder
  jobs:
  - job: DeploymentIntoTenantJob
    displayName: 'Deployment into Tenant Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "==== Deployment ===="

        jsonobject=$(echo "{\"adminObject\":{\"id\":\"someguid\",\"type\":\"adminObject\",\"properties\":{\"flushConfig\":false,\"storageType\":\"stream\",\"objectKey\":\"$(Build.SourceBranch | tr / .)\",\"tenantId\":\"etronds\",\"retryCount\":1,\"sleepTime\":1000}}}")
        
        curl -X POST \
          -H "Content-Type: application/zip" \
          -H "x-rdp-version: 8.1" \
          -H "x-rdp-clientId: rdpclient" \
          -H "x-rdp-userId: etronds.systemadmin@riversand.com" \
          -H "x-rdp-userRoles: systemadmin" \
          -H "auth-client-id: j29DTHa7m7VHucWbHg7VvYA75pUjBopS" \
          -H "auth-client-secret: J7UaRWQgxorI8mdfuu8y0mOLqzlIJo2hM3O4VfhX1PIeoa7CYVX_l0-BnHRtuSWB" \
          -d "$jsonobject" \
          "https://etronds.riversand.com/api/adminservice/deploytenantseed"

      displayName: 'Deployment'
